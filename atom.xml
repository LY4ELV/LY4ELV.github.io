<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LY4E</title>
  
  
  <link href="/Hexo/blog/atom.xml" rel="self"/>
  
  <link href="http://clown.github.io/Hexo/blog/"/>
  <updated>2019-05-14T10:02:20.844Z</updated>
  <id>http://clown.github.io/Hexo/blog/</id>
  
  <author>
    <name>Clown</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo个性化</title>
    <link href="http://clown.github.io/Hexo/blog/2019/05/14/hexo%E4%B8%AA%E6%80%A7%E5%8C%96/"/>
    <id>http://clown.github.io/Hexo/blog/2019/05/14/hexo个性化/</id>
    <published>2019-05-14T10:01:31.000Z</published>
    <updated>2019-05-14T10:02:20.844Z</updated>
    
    <content type="html"><![CDATA[<ol><li>修改站点配置<br>打开站点配置文件 ，找到：<h1 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h1>title: Hexo<br>subtitle:<br>description:<br>keywords:<br>author: John Doe<br>language:<br>timezone:<br>根据自己的需要去修改上边的配置，这些配置的注释如下：<h1 id="Site-1"><a href="#Site-1" class="headerlink" title="Site"></a>Site</h1><h1 id="站点标题"><a href="#站点标题" class="headerlink" title="站点标题"></a>站点标题</h1>title: Hexo<h1 id="站点副标题"><a href="#站点副标题" class="headerlink" title="站点副标题"></a>站点副标题</h1>subtitle:<h1 id="站点描述"><a href="#站点描述" class="headerlink" title="站点描述"></a>站点描述</h1>description:<h1 id="站点关键词"><a href="#站点关键词" class="headerlink" title="站点关键词"></a>站点关键词</h1>keywords:<h1 id="站点主人"><a href="#站点主人" class="headerlink" title="站点主人"></a>站点主人</h1>author: John Doe<h1 id="站点语言"><a href="#站点语言" class="headerlink" title="站点语言"></a>站点语言</h1>language:<h1 id="站点时区"><a href="#站点时区" class="headerlink" title="站点时区"></a>站点时区</h1>timezone:<br>1.1 language<br>目前 NexT 支持的语言如下：<br>语言<br>language<br>English<br>en<br>简体中文<br>zh-Hans<br>Français<br>fr-FR<br>Português<br>pt或者pt-BR<br>繁體中文<br>zh-hk或者zh-tw<br>Русский язык<br>ru<br>Deutsch<br>de<br>日本語<br>ja<br>Indonesian<br>id<br>Korean<br>ko<br>1.2 timezone<br>Hexo 默认使用电脑的时区，也可以自己配置，比如：<br>UTC+8</li><li>安装新主题<br>Hexo有很多大佬开发的主题，很多人使用的是NexT主题，该主题也确实挺简洁好看的，新版本的NexT主题还可以选择四个主题。<br>那么怎么安装新的Hexo主题呢？<br>在我们的Hexo项目路径下，可以看到有个 themes 文件夹，这个文件夹就是用于存放主题文件的。<br>2.1 下载 NexT 主题<br>首先在Hexo项目的路径下打开命令窗口，如果你没有配置好Git的环境变量，请使用Git Bash。<br>git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next<br>注意，当前路径是你的Hexo项目根目录，使用上边的命令才能正确地将 Next 主题clone到themes文件夹下的next文件夹里。<br>接下来你会看到 themes 下多了个 next 文件夹，点进去你会看到个.git文件夹，将该文件夹删掉，否则到时候你无法将整个完整的Hexo项目push到GitHub上。<br>2.2 启用 NexT 主题<br>在Hexo项目中，有两个重要的配置文件 _config.yml；这两个配置文件一个在项目根目录下，一个在主题目录下。<br>前者是站点配置文件，后者是主题配置文件，顾名思义，一个是Hexo项目的配置选项，一个是主题文件的配置选项。<br>打开站点配置文件，用Windows自带的笔记本是无法打开该文件的，请使用其他的编辑器来打开，常见的编辑器有Notepad++，UltraEdit，EditPlus等。<br>在站点配置文件中，找到：<h1 id="Extensions"><a href="#Extensions" class="headerlink" title="Extensions"></a>Extensions</h1><h2 id="Plugins-https-hexo-io-plugins"><a href="#Plugins-https-hexo-io-plugins" class="headerlink" title="Plugins: https://hexo.io/plugins/"></a>Plugins: <a href="https://hexo.io/plugins/" target="_blank" rel="noopener">https://hexo.io/plugins/</a></h2><h2 id="Themes-https-hexo-io-themes"><a href="#Themes-https-hexo-io-themes" class="headerlink" title="Themes: https://hexo.io/themes/"></a>Themes: <a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></h2>theme: landscape<br>默认的博客主题就是这个，我们将其修改为next；这里的主题是指在 themes 文件夹下的对应主题的文件夹名字。<br>注意，在配置文件中所有的属性的值，都必须和前边的 : 之间留一个空格。比如下边的写法就是错误的，不加上空格的话会出错。<br>theme:landscape<br>2.3 选择对应主题的外观 Scheme<br>打开主题配置文件，找到下边的选项：<h1 id="—————————————————————"><a href="#—————————————————————" class="headerlink" title="—————————————————————"></a>—————————————————————</h1><h1 id="Scheme-Settings"><a href="#Scheme-Settings" class="headerlink" title="Scheme Settings"></a>Scheme Settings</h1><h1 id="—————————————————————-1"><a href="#—————————————————————-1" class="headerlink" title="—————————————————————"></a>—————————————————————</h1></li></ol><h1 id="Schemes"><a href="#Schemes" class="headerlink" title="Schemes"></a>Schemes</h1><p>scheme: Muse</p><p>#scheme: Mist</p><p>#scheme: Pisces</p><p>#scheme: Gemini<br>默认会使用Muse作为Next主题的外观，通过将某个scheme前边的#去掉来启动某个外观，如下：</p><h1 id="—————————————————————-2"><a href="#—————————————————————-2" class="headerlink" title="—————————————————————"></a>—————————————————————</h1><h1 id="Scheme-Settings-1"><a href="#Scheme-Settings-1" class="headerlink" title="Scheme Settings"></a>Scheme Settings</h1><h1 id="—————————————————————-3"><a href="#—————————————————————-3" class="headerlink" title="—————————————————————"></a>—————————————————————</h1><h1 id="Schemes-1"><a href="#Schemes-1" class="headerlink" title="Schemes"></a>Schemes</h1><p>#scheme: Muse</p><p>#scheme: Mist</p><p>#scheme: Pisces<br>scheme: Gemini<br>2.4 验证新主题<br>依然是老操作——启动调试模式服务器：<br>hexo s –debug<br>启动成功后，使用浏览器访问<a href="http://localhost:4000/，看看博客能否访问成功。" target="_blank" rel="noopener">http://localhost:4000/，看看博客能否访问成功。</a></p><ol start="3"><li>修改 Next 主题配置<br>主题配置文件 _config.yml 位于 themes\next 之下。<br>3.1 头像设置<br>打开主题配置文件，找到如下：<h1 id="侧边栏头像"><a href="#侧边栏头像" class="headerlink" title="侧边栏头像"></a>侧边栏头像</h1><h1 id="Sidebar-Avatar"><a href="#Sidebar-Avatar" class="headerlink" title="Sidebar Avatar"></a>Sidebar Avatar</h1><h1 id="in-theme-directory-source-images-images-avatar-gif"><a href="#in-theme-directory-source-images-images-avatar-gif" class="headerlink" title="in theme directory(source/images): /images/avatar.gif"></a>in theme directory(source/images): /images/avatar.gif</h1><h1 id="in-site-directory-source-uploads-uploads-avatar-gif"><a href="#in-site-directory-source-uploads-uploads-avatar-gif" class="headerlink" title="in site  directory(source/uploads): /uploads/avatar.gif"></a>in site  directory(source/uploads): /uploads/avatar.gif</h1><h1 id="头像的路径可以放在主题对应文件夹的source里，也可以放在站点根目录的source里，建议放在站点路径上"><a href="#头像的路径可以放在主题对应文件夹的source里，也可以放在站点根目录的source里，建议放在站点路径上" class="headerlink" title="头像的路径可以放在主题对应文件夹的source里，也可以放在站点根目录的source里，建议放在站点路径上"></a>头像的路径可以放在主题对应文件夹的source里，也可以放在站点根目录的source里，建议放在站点路径上</h1>#avatar: /images/avatar.gif<br>将avatar前边的#去掉，接着配置图片的路径即可。<br>3.2 网站图标<br>打开主题配置文件，找到如下：<h1 id="将你的网站图标放到-站点根目录-source-推荐）或者hexo-site-themes-next-source-images-目录下"><a href="#将你的网站图标放到-站点根目录-source-推荐）或者hexo-site-themes-next-source-images-目录下" class="headerlink" title="将你的网站图标放到{站点根目录}/source/ (推荐）或者hexo-site/themes/next/source/images/目录下"></a>将你的网站图标放到<code>{站点根目录}/source/</code> (推荐）或者<code>hexo-site/themes/next/source/images/</code>目录下</h1><h1 id="默认的Next主题的网站图标放在-站点根目录-themes-next-source-images-目录下"><a href="#默认的Next主题的网站图标放在-站点根目录-themes-next-source-images-目录下" class="headerlink" title="默认的Next主题的网站图标放在{站点根目录}/themes/next/source/images/目录下"></a>默认的Next主题的网站图标放在<code>{站点根目录}/themes/next/source/images/</code>目录下</h1><h1 id="如果你想将自己的网站图标放到-站点根目录-source-根目录下，必须将-images从路径中去掉"><a href="#如果你想将自己的网站图标放到-站点根目录-source-根目录下，必须将-images从路径中去掉" class="headerlink" title="如果你想将自己的网站图标放到{站点根目录}/source/根目录下，必须将/images从路径中去掉"></a>如果你想将自己的网站图标放到<code>{站点根目录}/source/</code>根目录下，必须将<code>/images</code>从路径中去掉</h1><h1 id="如果你将网站图标放到了-站点根目录-source-images路径下，需要令网站图标的名字和-站点根目录-themes-next-source-images-路径下的网站图标不同，否则网站图标会使用后者的同名图标"><a href="#如果你将网站图标放到了-站点根目录-source-images路径下，需要令网站图标的名字和-站点根目录-themes-next-source-images-路径下的网站图标不同，否则网站图标会使用后者的同名图标" class="headerlink" title="如果你将网站图标放到了{站点根目录}/source/images路径下，需要令网站图标的名字和{站点根目录}/themes/next/source/images/路径下的网站图标不同，否则网站图标会使用后者的同名图标"></a>如果你将网站图标放到了<code>{站点根目录}/source/images</code>路径下，需要令网站图标的名字和<code>{站点根目录}/themes/next/source/images/</code>路径下的网站图标不同，否则网站图标会使用后者的同名图标</h1>favicon:<br>small: /images/favicon-16x16-next.png<br>medium: /images/favicon-32x32-next.png<br>apple_touch_icon: /images/apple-touch-icon-next.png<br>safari_pinned_tab: /images/logo.svg<br>#android_manifest: /images/manifest.json<br>#ms_browserconfig: /images/browserconfig.xml<br>这里需要注意的是，网站图标一般是.ico或者.gif的类型，而且图标的大小一般只有几k而已，可以使用下边的网站制作个人的网站图标，建议先将原本的图标弄成正方形的。<br>在线制作ico图标<br>3.3 菜单设置<br>打开主题配置文件，找到如下：<h1 id="如果该站点是运行在子目录之下（比如：domain-tld-blog；这里的blog就是指我们的博客，前边的是上一级的域名），需要将路径前的斜杠去掉（-archives-gt-archives；即是将原本的绝对路径改成了相对路径）。"><a href="#如果该站点是运行在子目录之下（比如：domain-tld-blog；这里的blog就是指我们的博客，前边的是上一级的域名），需要将路径前的斜杠去掉（-archives-gt-archives；即是将原本的绝对路径改成了相对路径）。" class="headerlink" title="如果该站点是运行在子目录之下（比如：domain.tld/blog；这里的blog就是指我们的博客，前边的是上一级的域名），需要将路径前的斜杠去掉（/archives -&gt; archives；即是将原本的绝对路径改成了相对路径）。"></a>如果该站点是运行在子目录之下（比如：domain.tld/blog；这里的blog就是指我们的博客，前边的是上一级的域名），需要将路径前的斜杠去掉（/archives -&gt; archives；即是将原本的绝对路径改成了相对路径）。</h1><h1 id="用法：Key：-link-菜单图标"><a href="#用法：Key：-link-菜单图标" class="headerlink" title="用法：Key：/link/ || 菜单图标"></a>用法：<code>Key：/link/ || 菜单图标</code></h1><h1 id="Key就是菜单名，如果对该菜单名进行了国际化，即将其翻译放到对应的languages文件夹中，将会根据你设置的语言进行加载对应的菜单名翻译；如果没有设置翻译，则会使用这里的Key作为菜单名。这里的Key是大小写敏感的。"><a href="#Key就是菜单名，如果对该菜单名进行了国际化，即将其翻译放到对应的languages文件夹中，将会根据你设置的语言进行加载对应的菜单名翻译；如果没有设置翻译，则会使用这里的Key作为菜单名。这里的Key是大小写敏感的。" class="headerlink" title="Key就是菜单名，如果对该菜单名进行了国际化，即将其翻译放到对应的languages文件夹中，将会根据你设置的语言进行加载对应的菜单名翻译；如果没有设置翻译，则会使用这里的Key作为菜单名。这里的Key是大小写敏感的。"></a>Key就是菜单名，如果对该菜单名进行了国际化，即将其翻译放到对应的languages文件夹中，将会根据你设置的语言进行加载对应的菜单名翻译；如果没有设置翻译，则会使用这里的Key作为菜单名。这里的Key是大小写敏感的。</h1><h1 id="在-分隔符之前的值是该菜单对应的路径"><a href="#在-分隔符之前的值是该菜单对应的路径" class="headerlink" title="在||分隔符之前的值是该菜单对应的路径"></a>在<code>||</code>分隔符之前的值是该菜单对应的路径</h1><h1 id="在-分隔符之后的值是FontAwesome的图标（不懂的请百度什么是FontAwesome以及其用法），如果不指定图标，将会自动使用question这个图标。"><a href="#在-分隔符之后的值是FontAwesome的图标（不懂的请百度什么是FontAwesome以及其用法），如果不指定图标，将会自动使用question这个图标。" class="headerlink" title="在||分隔符之后的值是FontAwesome的图标（不懂的请百度什么是FontAwesome以及其用法），如果不指定图标，将会自动使用question这个图标。"></a>在<code>||</code>分隔符之后的值是FontAwesome的图标（不懂的请百度什么是FontAwesome以及其用法），如果不指定图标，将会自动使用question这个图标。</h1></li></ol><p>menu:<br>  home: / || home</p><p>  #about: /about/ || user</p><p>  #tags: /tags/ || tags</p><p>  #categories: /categories/ || th<br>  archives: /archives/ || archive</p><p>  #schedule: /schedule/ || calendar</p><p>  #sitemap: /sitemap.xml || sitemap</p><p>  #commonweal: /404/ || heartbeat<br>使用方法很简单，依然是将需要展示的菜单的前边的#去掉就行，更加具体的操作信息我已经在上边的注释中给出了。<br>3.4 标签分类<br>首先我们需要新建页面，在站点根目录打开命令窗口，分别输入命令：<br>hexo n page “categories”<br>hexo n page “tags”<br>hexo n page “about”<br>接着你会发现在根目录的 source 目录下多出了上边的三个文件夹，里面各自有一个 index.md 文件。如果之前我们将menu里的categories，tags，about三个菜单解开了封印，那么在创建好这三个页面后就可以成功访问到，否则会报404请求错误。<br>3.5 社交链接</p><h1 id="如果不指定图标，会默认使用globe图标"><a href="#如果不指定图标，会默认使用globe图标" class="headerlink" title="如果不指定图标，会默认使用globe图标"></a>如果不指定图标，会默认使用globe图标</h1><p>#social:</p><p>  #GitHub: <a href="https://github.com/yourname" target="_blank" rel="noopener">https://github.com/yourname</a> || github</p><p>  #E-Mail: mailto:<a href="mailto:yourname@gmail.com" target="_blank" rel="noopener">yourname@gmail.com</a> || envelope</p><p>  #Google: <a href="https://plus.google.com/yourname" target="_blank" rel="noopener">https://plus.google.com/yourname</a> || google</p><p>  #Twitter: <a href="https://twitter.com/yourname" target="_blank" rel="noopener">https://twitter.com/yourname</a> || twitter</p><p>  #FB Page: <a href="https://www.facebook.com/yourname" target="_blank" rel="noopener">https://www.facebook.com/yourname</a> || facebook</p><p>  #VK Group: <a href="https://vk.com/yourname" target="_blank" rel="noopener">https://vk.com/yourname</a> || vk</p><p>  #StackOverflow: <a href="https://stackoverflow.com/yourname" target="_blank" rel="noopener">https://stackoverflow.com/yourname</a> || stack-overflow</p><p>  #YouTube: <a href="https://youtube.com/yourname" target="_blank" rel="noopener">https://youtube.com/yourname</a> || youtube</p><p>  #Instagram: <a href="https://instagram.com/yourname" target="_blank" rel="noopener">https://instagram.com/yourname</a> || instagram</p><p>  #Skype: skype:yourname?call|chat || skype<br>老规矩，去掉#注释就可以启动。<br>/***</p><ul><li></li><li>.-<del>~</del><del>~~-._       _.-</del><del>~</del>~~-.</li><li><strong>.’  欢迎访问    ~.   .~              `.</strong></li><li>.’//  我的个人博客    ./   ☞                   ☜   \`.</li><li>.’//                     |                     \`.</li><li>.’// .-~”””””””<del>~~-._     |     _,-</del>~~”””””””~-. \`.</li><li>.’//.-“                 <code>-.  |  .-&#39;                 &quot;-.\\</code>.</li><li>.’//<strong>__</strong>.============-..   \ | /   ..-============.<strong>__</strong>\`.</li><li>.’<strong><strong><strong><strong><strong><strong><strong>__</strong></strong></strong></strong></strong></strong></strong>|/<strong><strong><strong><strong><strong><strong><strong>__</strong></strong></strong></strong></strong></strong></strong>`.<br>*/</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;修改站点配置&lt;br&gt;打开站点配置文件 ，找到：&lt;h1 id=&quot;Site&quot;&gt;&lt;a href=&quot;#Site&quot; class=&quot;headerlink&quot; title=&quot;Site&quot;&gt;&lt;/a&gt;Site&lt;/h1&gt;title: Hexo&lt;br&gt;subtitle:&lt;br&gt;descr
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo简单操作</title>
    <link href="http://clown.github.io/Hexo/blog/2019/05/14/Hexo%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C/"/>
    <id>http://clown.github.io/Hexo/blog/2019/05/14/Hexo简单操作/</id>
    <published>2019-05-14T03:33:41.000Z</published>
    <updated>2019-05-14T03:38:11.163Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个多年的iOS开发者，而且喜欢自己没事的时候写点东西以供他人分享，都想要有一个属于自己的、网址上带有自己名字的博客，有的人用简书或者GitHub来写文章，不过那些都是第三方平台，不是自己的，只有属于自己的一个博客才会显得很酷很装逼有没有??，OK接下来咱们开始搭建吧！</p><p>一、前言</p><p>该博客用的是Hexo框架，基于Node.js，搭建博客首先需要有一个GitHub账号并且配置了SSH Keys（申请步骤这里就不介绍了，网上教程很多），然后在GitHub里创建一个名为username.github.io的仓库，还需要安装Git、安装Node.js、安装Hexo</p><p>二、准备工作</p><p>1、创建GitHub仓库</p><p>创建一个名为username.github.io的仓库<br>在GitHub中新建仓库相信你们都会，点击New repository创建，注意：仓库名称一定是username.github.io这种格式，username替换一个你喜欢的名字。</p><p>username.github.io</p><p>2、安装Git</p><p>如果已安装可跳过</p><p>方法一、通过HomeBrew来安装</p><p>先安装HomeBrew（如果已安装可跳过）<br>终端执行命令   $ /usr/bin/ruby -e “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;" target="_blank" rel="noopener">https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</a><br>然后安装git    $ brew install git</p><p>方法二、你也可以通过下载安装程序来安装</p><p>验证：执行git –version如果输出类似git version 2.15.0说明安装成功了</p><p>3、安装Node.js</p><p>先安装nvm，这是Node.js版本管理器，可以轻松切换Node.js版本。 这里有两种方式安装。如果使用curl的方式安装，安装完成之后一定要重启终端。</p><p>方法一、通过HomeBrew来安装（推荐）</p><p>$ brew install node</p><p>方法二、curl安装方式</p><p>$ curl <a href="https://raw.github.com/creationix/nvm/master/install.sh" target="_blank" rel="noopener">https://raw.github.com/creationix/nvm/master/install.sh</a> | sh<br>安装完成后，重启终端并执行下列命令即可安装 Node.js<br>$ nvm install stable</p><p>验证：执行npm –version如果输出类似5.5.1说明安装成功了</p><p>4、安装Hexo</p><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo</p><p>$ npm install -g hexo-cli</p><p>三、建站</p><p>1、创建资源</p><p>安装 Hexo 完成后，在你喜欢的目录下新建一个文件夹命名为username（替换成你喜欢的名字），然后cd到username文件夹下</p><p>$ cd username<br>$ hexo init<br>$ npm install</p><p>执行完毕后你将看到在你刚创建的文件夹下会有很多资源</p><p>username</p><p>2、基础配置</p><p>接下来打开username下的_config.yml文件（上图中的第一个文件），修改一下里面几个关键的信息，修改完记得保存，注意：冒号后面要有空格。</p><p>title: my_杨哥      //你博客的名字<br>author: Li Yang    //你的名字<br>language: zh-Hans  //语言-简体中文</p><p>上面这3个字段是关键信息，如需修改其他信息请参考配置</p><p>3、主题安装</p><p>username下的themes文件夹中存放的是主题，默认的是landscape主题，如果你不喜欢可以安装其他主题。</p><p>NexT主题是一套简约的主题，是目前使用最火的一个主题，下面我们安装一下该主题，你也可参考安装NexT。</p><p>Hexo还有更多主题供你选择</p><p>安装NexT主题：</p><p>$ cd username        //进入到username文件夹下<br>$ git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p><p>启用NexT主题：</p><p>打开username下的_config.yml文件（上图中的第一个文件），找到theme字段将其值更改为next</p><p>验证主题：</p><p>注意：每次切换主题之后、验证主题之前都要清除 Hexo 的缓存</p><p>$ hexo clean    //清除缓存</p><p>开始验证：启动Hexo本地服务器</p><p>$ hexo s</p><p>然后你将会看到终端输出</p><p>INFO  Hexo is running at <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>. Press Ctrl+C to stop.</p><p>这行的意思是说你用浏览器打开 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 便可看到你的博客了，这只是本地的测试，如果测试没问题就执行Ctrl+C退出去，此时该地址就不能访问了。</p><p>OK，现在，你已经成功安装并启用了 NexT 主题。接下来就是对该主题的一些设置，详细可参考NexT主题设定</p><p>四、写作</p><p>以上所有的工作都完成了，并设置了一套你自己喜欢的主题样式，接下来就可以写博客了。</p><p>1、新建一篇文章</p><p>$ hexo new layout title</p><p>layout：模板，如果不写将使用默认模板，一般不写，直接$ hexo new title</p><p>title：文章标题，如果标题包含空格的话，请使用引号括起来。</p><p>新建的文章将会存在username/source/_posts中，_posts就是默认模板，文章文件名称将会是title.md，接下来就可以打开该文件进行编辑写你的文章了。</p><p>2、生成静态文件</p><p>写完文章之后执行，来生成静态网页文件</p><p>$ hexo g        //hexo generate的缩写</p><p>3、启动本地服务器</p><p>$ hexo s        //hexo server的缩写</p><p>本地服务器启动完之后就如同上面验证主题一样，访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 来验证一下你写的文章预览效果。</p><p>4、部署网站</p><p>安装部署工具</p><p>$ npm install hexo-deployer-git –save</p><p>安装完毕后打开username下的_config.yml文件，翻到最底部找到deploy节点编辑如下：</p><p>deploy:<br>  type: git<br>  repository: <a href="https://github.com/YoungerLi/youngerli.github.io.git" target="_blank" rel="noopener">https://github.com/YoungerLi/youngerli.github.io.git</a><br>  branch: master</p><p>其中<a href="https://github.com/YoungerLi/youngerli.github.io.git就是你GitHub中创建的仓库地址，在这复制即可" target="_blank" rel="noopener">https://github.com/YoungerLi/youngerli.github.io.git就是你GitHub中创建的仓库地址，在这复制即可</a></p><p>repository</p><p>最后，部署网站</p><p>$ hexo d        //hexo deploy的缩写</p><p>第一次执行这一步的时候会让你输入你的GitHub的用户名及密码，输入正确无误后执行完毕，任何人就可以访问 <a href="https://youngerli.github.io" target="_blank" rel="noopener">https://youngerli.github.io</a> 进入你的博客了。</p><p>以后每次写完文章之后依次执行以下命令就可以发布更新了</p><p>$ hexo clean      // 清除缓存<br>$ hexo g          // 生成静态网页文件<br>$ hexo d          // 将本地博客发布到github</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作为一个多年的iOS开发者，而且喜欢自己没事的时候写点东西以供他人分享，都想要有一个属于自己的、网址上带有自己名字的博客，有的人用简书或者GitHub来写文章，不过那些都是第三方平台，不是自己的，只有属于自己的一个博客才会显得很酷很装逼有没有??，OK接下来咱们开始搭建吧！
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://clown.github.io/Hexo/blog/2019/05/13/hello-world/"/>
    <id>http://clown.github.io/Hexo/blog/2019/05/13/hello-world/</id>
    <published>2019-05-13T09:31:47.313Z</published>
    <updated>2019-05-13T09:31:47.313Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
